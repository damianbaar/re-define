{
  "index.js": {
    "id": "index.js",
    "type": "js",
    "mtime": 1410554811000,
    "src": "var $ = require('jquery')\n  , d3 = require('d3')\n\nvar barData = [\n    { 'x': 1, 'y': 5 }\n  , { 'x': 20, 'y': 20 }\n  , { 'x': 40, 'y': 10 }\n  , { 'x': 60, 'y': 40 }\n  , { 'x': 80, 'y': 5 }\n  , { 'x': 100, 'y': 60 }]\n\nmodule.exports = { data: function() { return barData }}\n\n$(function() {\n\n    var vis = d3.select('#visualisation'),\n      WIDTH = 1000,\n      HEIGHT = 500,\n      MARGINS = {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 50\n      },\n      xRange = d3.scale.ordinal().rangeRoundBands([MARGINS.left, WIDTH - MARGINS.right], 0.1).domain(barData.map(function (d) {\n        return d.x;\n      })),\n\n\n      yRange = d3.scale.linear().range([HEIGHT - MARGINS.top, MARGINS.bottom]).domain([0,\n        d3.max(barData, function (d) {\n          return d.y;\n        })\n      ]),\n\n      xAxis = d3.svg.axis()\n        .scale(xRange)\n        .tickSize(5)\n        .tickSubdivide(true),\n\n      yAxis = d3.svg.axis()\n        .scale(yRange)\n        .tickSize(5)\n        .orient(\"left\")\n        .tickSubdivide(true);\n\n\n    vis.append('svg:g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + (HEIGHT - MARGINS.bottom) + ')')\n      .call(xAxis);\n\n    vis.append('svg:g')\n      .attr('class', 'y axis')\n      .attr('transform', 'translate(' + (MARGINS.left) + ',0)')\n      .call(yAxis);\n\n    vis.selectAll('rect')\n      .data(barData)\n      .enter()\n      .append('rect')\n      .attr('x', function (d) {\n        return xRange(d.x);\n      })\n      .attr('y', function (d) {\n        return yRange(d.y);\n      })\n      .attr('width', xRange.rangeBand())\n      .attr('height', function (d) {\n        return ((HEIGHT - MARGINS.bottom) - yRange(d.y));\n      })\n      .attr('fill', 'grey')\n      .on('mouseover',function(d){\n        d3.select(this)\n          .attr('fill','blue');\n      })\n      .on('mouseout', function(d) {\n        d3.select(this)\n          .attr('fill','grey');\n      })\n})\n",
    "deps": {},
    "entry": true
  }
}