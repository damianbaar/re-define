(function (parent, factory){
  if (typeof define === 'function' && define.amd) {
    define('<%- config.names.amd %>', [<%= 
           _.map(external, function(d){ return "'" + d + "'" }).join(',') %>], factory)
  } else if (typeof exports === 'object') {
    module.exports = factory(<%=
           _.map(external, function(d){ return "require('" + d + "')" }).join(',') %>)
  } else {
  <% _.chain(external)
      .map(function(d) { return 'var ' + util.escape(d) + " = " + " parent." + util.global(d) })
      .each(function(name) {;
  %>  <%= name %>
  <%})%>
    <%= util.toGlobal('parent', config.names.global, "factory("+_.map(external, util.escape).join(',') + ")") %>
  }
  }(this, function (<%= _.map(external, util.escape).join(',') %>) {
    var context = this;

  <% _.each(external, function(d) { %>  this['<%= d %>'] = <%= escape(d) %>; 
  <% }) %> <% _.each(bundles, function(b) { 
    if(!b.wrap) { %><%= b.content %>; 
    <% } else { %>
    (function(context) {
      context['<%= b.name %>'] = (function(scope) { <% _.each(b.code, function(c) { %>
        <% if(!c.wrap) { %> <%= c.content %>;
        <% } else if(['.json', '.html'].indexOf(c.ext) > -1) { %>
        scope['<%= c.name %>'] = <%= c.content %>; <% } else { %>
        scope['<%= c.name %>'] = (function(<%= config.exportVar %>) { 
          <%= c.content %> 

          return <%= config.exportVar %>; 
        })({});
    <% }}) %>

        return require('<%= b.returns %>')

        function require(name) { return scope[name] || context[name] }

      }.bind(context))({});
    })(this);
  <% }}) %>

  <% if(config.returns) {%> return this['<%= config.returns %>']
  <%} else {%> return this <% } %>

  function require(name) { return context[name] }
}.bind({})))
